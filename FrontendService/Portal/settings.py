"""
Django settings for Portal project.

Generated by 'django-admin startproject' using Django 1.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import socket
import datetime

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
_BASE_DIR = '/logs'
BACKEND_URL = 'http://node_backend:8080'
# BACKEND_URL = 'http://0.0.0.0:8080'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = False
DEBUG = True

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = ')w4mv6@un@r_*vn&0q_b0fpznonfay$c6h&hvj5t1%4kim2ty*'


if DEBUG:
    ALLOWED_HOSTS = ['*']
else:
    ALLOWED_HOSTS = ['pdf.stego.su', 'forge.stego.su']

# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bootstrap3',
    'Main',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Portal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
        # 'TEMPLATE_LOADERS': (
        #     'django_jinja.loaders.AppLoader',
        #     'django_jinja.loaders.FileSystemLoader',
        # ),
    },
]

WSGI_APPLICATION = 'Portal.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

# if DEBUG:
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.mysql',
#             'NAME': 'portal',
#             'USER': 'dj',
#             'PASSWORD': 'password',
#             'HOST': 'localhost',
#             'PORT': '',
#         }
#     }
# else:
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.postgresql_psycopg2',
#             'NAME': 'pdfstego',
#             'USER': 'dj',
#             'PASSWORD': 'password',
#             'HOST': 'localhost',
#             'PORT': '',
#         }
#     }

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'

MEDIA_URL = '/media/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

BADPDF_STORE = os.path.join(BASE_DIR, 'badpdf')

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)

# TEMPLATE_LOADERS = (
#     'django_jinja.loaders.AppLoader',
#     'django_jinja.loaders.FileSystemLoader',
#
# )

CONTENT_TYPES = ['application/pdf']

MAX_UPLOAD_SIZE = 2097152

# Telemetry!
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'simple': {
            'format': '%(levelname)s,%(asctime)s,%(message)s',
            'datefmt': '%d/%m/%Y %H:%M:%S'
        },
    },
    'filters': {
        'mydata': {
            '()': 'Portal.log_filters.DelegateFilter',
        },
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.path.join(_BASE_DIR, 'front_{0}_{1}_mydata.log'.format(socket.gethostname(),
                                                                    datetime.datetime.now().strftime("%d%m%y_%H%M"))),
            'formatter': 'simple',
            'filters': ['mydata'],
        },
        'fatal': {
            'level': 'CRITICAL',
            'class': 'logging.FileHandler',
            'filename': os.path.join(_BASE_DIR, 'front_{0}_{1}_fatal.log'.format(
                socket.gethostname(),
                datetime.datetime.now().strftime("%d%m%y_%H%M"))),
            'formatter': 'simple'
        },
        'console': {
            'level': 'INFO',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'custom': {
            'handlers': ['file'],
            'level': 'INFO'
        },
        'exceptions': {
            'handlers': ['fatal'],
            'level': 'DEBUG',
        }
    },
}

if DEBUG:
    CORE_EXECUTABLE = '/Users/lancer/PycharmProjects/PDF_Stego_Backend/core/stegopdf'
else:
    CORE_EXECUTABLE = '/webservice/pdfstego/backend/core/stegopdf'
